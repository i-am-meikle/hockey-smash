package no.meikle.hockey_smash.domain;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.util.Date;

@DynamoDBTable(tableName = "activities")
public class Activity {

	@DynamoDBHashKey
	private String userKey;
	@DynamoDBRangeKey
	@DynamoDBAutoGeneratedKey
	private String key;
	@DynamoDBIndexRangeKey(globalSecondaryIndexNames= {"team-activities", "challenge-activities"})
	private Date activityDate;
	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
	private Date loggedDate;
	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
	private Date modifiedDate;
	private int activity;
	private String nickname;
	@DynamoDBIndexHashKey(globalSecondaryIndexName="challenge-activities")
	private String challengeKey;
	private String challengeName;
	@DynamoDBIndexHashKey(globalSecondaryIndexName="team-activities")
	private String teamKey;
	private String tagline;

	public Date getLoggedDate() {
		return loggedDate;
	}

	public void setLoggedDate(Date loggedDate) {
		this.loggedDate = loggedDate;
	}

	public Date getActivityDate() {
		return activityDate;
	}

	public void setActivityDate(Date activityDate) {
		this.activityDate = activityDate;
	}

	public int getActivity() {
		return activity;
	}

	public void setActivity(int activity) {
		this.activity = activity;
	}

	public String getUserKey() {
		return userKey;
	}

	public void setUserKey(String user) {
		this.userKey = user;
	}

	public void preWrite() {

		// If a generated field is set to am empty string by HTTP parameters,
		// then DynamoDB will not generate a key and barf instead.
		// So if the key is a zero length String, reset it to null.

		if (this.key != null && this.key.length() == 0) {
			key = null;
		}

	}

	public String getNickname() {
		return nickname;
	}

	public void setNickname(String userName) {
		this.nickname = userName;
	}

	public String getChallengeKey() {
		return challengeKey;
	}

	public void setChallengeKey(String challengeKey) {
		this.challengeKey = challengeKey;
	}

	public String getChallengeName() {
		return challengeName;
	}

	public void setChallengeName(String challengeName) {
		this.challengeName = challengeName;
	}

	public Date getModifiedDate() {
		return modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	public String getTeamKey() {
		return teamKey;
	}

	public void setTeamKey(String teamKey) {
		this.teamKey = teamKey;
	}

	public String getKey() {
		return key;
	}

	public void setKey(String key) {
		this.key = key;
	}

	public String getTagline() {
		
	if (tagline == null) {
		return this.getLegacyTagline();
	}
		
		return tagline;
	}

	private String getLegacyTagline() {

		StringBuilder builder = new StringBuilder();
		builder.append(this.getNickname());
		builder.append(" shot ");
		builder.append(this.getActivity());
		builder.append(" pucks as part of ");
		builder.append(this.getChallengeName());
		builder.append(" ...!");
		
		return builder.toString();
	}

	public void setTagline(String tagline) {
		this.tagline = tagline;
	}

}
